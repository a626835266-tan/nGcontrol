<%+header%>

<!--

The UMTS-table structure is as follows:

	<table>
	UMTSi (<tr>...
	   - UMTSi_1 (<tr>...
	   - UMTSi_2 (<tr>...
	   - UMTSi_3 (<tr>..
	</table

where UMTSi is there for all i=1...6. The 'info rows' UMTSi_1, UMTSi_2, and UMTSi_3 are only present
if the interface is enabled and there exists a route to.

Since UMTSi may be threated as UMTSi_0, we have up to 4 rows for information. Depending on the current
connection status, they are filled with the following information:

**if device is disabled (only UMTSi is present):

  UMTSi | Disabled (as multicol=6)                                 | <Button Enable>

**if device is enabled, but no route exists to (only UMTSi is present):

  UMTSi | Error: Interface is enabled but there exists no route to.| <Button Restart>
                                                                   | <Button Disable>

**if device is enabled and a route exists to (UMTSi, UMTSi_1, UMTSi_2, and UMTSi_3 are present):

  UMTSi | <connection info> | Signal  | <info> | Upload   | <info> 	
        | Provider | <info> | RSSI    | <info> | Download | <info> | <Button Disable> 	
        | Network  | <info> | Cell ID | <info> | Resets   | <info> | <Button Restart>
        | Uptime   | <info> | WAN IP  | <info> |

-->

<script>

//*******************************************************************************************
//main function to populate an interface's info or display disable/error information
//will also provide corresponding buttons
function insertInterfaceInfo(iface) {

  var stxhr = new XHR();
  stxhr.get('<%=luci.dispatcher.build_url("admin", "internetAccess", "statusOf")%>' + '/' + iface, null,
  function(x, mArray)
  {
    if(mArray.Enabled != 1)
    {
      deleteInterfaceInfo(iface);

      //display message in data field of left row
      var child_0 = document.getElementById("UMTS" + iface); 
      child_0.className = ""; //reset assigned 'firstline'-class
      child_0.innerHTML = "<table><tr><td><b>UMTS" + iface + "</b></td><td colspan='6'>Disabled</td>" +
                                  "<td><input type='button' value='Enable' class='cbi-button cbi-button-apply'" +
                                             "onclick='execute_action(\"Enable\", \"" + iface + "\")'/>" + 
                                  "</td></tr></table>";
    }
    else
    {
      if(mArray.Route != 1)
      {
        deleteInterfaceInfo(iface);

       //display message in data fild of left row
       var child_0 = document.getElementById("UMTS" + iface); 
       child_0.className = ""; //reset assigned 'firstline'-class
       child_0.innerHTML = "<table><tr><td><b>UMTS" + iface + "</b></td><td colspan='6'>" + 
                              "<b><font color='red'>Error:</font></b> Interface is enabled but there exists " +
                              "no route to. Check interface connection and router's routing table.</td>" +
                              "<td><input type='button' value='Restart' class='cbi-button cbi-button-reload' " +
                                         "onclick='execute_action(\"Restart\", \"" + iface + "\")'/>" + 
                                  "<input type='button' value='Disable' class='cbi-button cbi-button-reset' " +
                                         "onclick='execute_action(\"Disable\", \"" + iface + "\")'/>" + 
                              "</td></tr></table>";
      }
      else
      {
        //preformat and -calculate some values for nicer look&feel

          //info about the connection's status
          if(mArray.Status.connectionStatNum == "901") {
            var connectionStat = "<font color='green'>Connected</font>";
          } else {
            var connectionStat = "<font color='red'>" + mArray.Status.connectionStat + "</font>";
          }

          //get approx up/download in MB, .total*load is in byte, so devide by
          //(1024*1024)=(10485.76*100) but also apply some rounding to 2 digital places.
          var uploadMB = (Math.floor(parseInt(mArray.Status.totalUpload)/10485.76)/100).toFixed(2);
          var downloadMB = (Math.floor(parseInt(mArray.Status.totalDownload)/10485.76)/100).toFixed(2);

          //proper display negative retryMax as they comply to infinite trys
          if(mArray.retryMax < 0) {mArray.retryMax = "&infin;"}

        //change content of first line, is something like child_0
        var child_0 = document.getElementById("UMTS" + iface);
        child_0.className = "firstline";
        child_0.innerHTML = "<table><tr>" + 
                "<td><b>UMTS" + iface + "<b></td><td colspan='2'><b>" + connectionStat + "</b></td>" + 
                "<td><b>Signal</b></td><td>" + mArray.Status.strength + "/5</td>" + 
                "<td><b>Upload</b></td><td>" + uploadMB + " MB</td>" +
                "<td rowspan='4'>" + 
                   "<input type='button' value='Disable' class='cbi-button cbi-button-reset'" +
                     "onclick='execute_action(\"Disable\", \"" + iface + "\")' /><br>" + 
                   "<div style='line-height:50%'><br></div>" + 
                   "<input type='button' value='Restart' class='cbi-button cbi-button-reload'" +
                     "onclick='execute_action(\"Restart\", \"" + iface + "\")' />" +
                "</td></tr></table>";

        //change/create content of second line, so called child_1
        var child_1 = document.getElementById("UMTS" + iface + "_1")
        if (child_1 == null) {                         //if child 1 not there (was may called from refresher)
          var child_1 = document.createElement('tr');  //create this table line with it's properties
          child_1.id = "UMTS" + iface + "_1";
          child_1.className = "inner";
        }
        child_1.innerHTML = "<table><td></td>" +       //and fill with information
                "<td><b>Provider</b></td><td>" + mArray.Status.providerName + "</td>" + 
                "<td><b>RSSI</b></td><td>" + mArray.Status.rssi + "</td>" + 
                "<td><b>Download</b></td><td>" + downloadMB + " MB</td>" +
                "</table>";
        var row2 = document.getElementById("UMTS" + (iface+1) ); //iface +1, because we append BEFORE the next UMTS line
        row2.parentNode.insertBefore(child_1, row2);

        //change/create content of second line, so called child_1
        var child_2 = document.getElementById("UMTS" + iface + "_2")
        if (child_2 == null) {                         //if child 2 not there, create this table line
          var child_2 = document.createElement("tr");
          child_2.id = "UMTS" + iface + "_2"; 
          child_2.className = "inner";
        }
        child_2.innerHTML = "<table><td></td>" +
                "<td><b>Network</b></td><td>" + mArray.Status.networkType + "</td>" + 
                "<td><b>Cell ID</b></td><td>" + mArray.Status.cellID + "</td>" + 
                "<td><b>Resets</b></td><td>" + mArray.retryAttempts + "/" + mArray.retryMax + "</td>" +
                "</table>";
        row2 = document.getElementById("UMTS" + (iface+1) );  //do the actual insertion...
        row2.parentNode.insertBefore(child_2, row2);

        //if child 3 not there, append 3rd child to iface. Then fill with information
        var child_3 = document.getElementById("UMTS" + iface + "_3")
        if (child_3 == null) {
          var child_3 = document.createElement("tr");
          child_3.id = "UMTS" + iface + "_3"; 
          child_3.className = "lastline";
        }
        child_3.innerHTML = "<table><td></td>" +
                "<td><b>Uptime</b></td><td>" + toTimeFormat(mArray.Uptime) + "</td>" + 
                "<td><b>WAN IP</b></td><td>" + mArray.Status.wanIPAddress + "</td>" +
                "</table>";
        row2 = document.getElementById("UMTS" + (iface+1) );  //do the actual insertion...
        row2.parentNode.insertBefore(child_3, row2);
      }
    }
  }
  );
}


//*******************************************************************************************
//function to perform the desired action via lua controller
function execute_action(action, iface)
{
  var stxhr = new XHR();
  stxhr.get('<%=luci.dispatcher.build_url("admin", "internetAccess", "statusChange")%>' + '/' + action + '/' + iface, null,
    function(x)
      {
        insertInterfaceInfo(iface); //refresh interface's info after action has been performed
      }
    );
}


//*******************************************************************************************
//may delete iface's info rows and set content of interface row to content of message
// b* refers to the button which to display
function deleteInterfaceInfo(iface)
{
  //Test whether info-row _1 exists. If so, delete all becuase if _1 exists, also _2 and _3 have to exist:
  if (document.getElementById("UMTS" + iface + "_1") != null)
  {
    for( var info = 1; info <= 3; info++ ) // have to delete info-rows "_1", "_2", and "_3": 
    {
      document.getElementById("UMTS" + iface + "_" + info).remove();
    }
  }

}

//*******************************************************************************************
//helper to delete rows
Element.prototype.remove = function() 
{
  this.parentElement.removeChild(this);
}

NodeList.prototype.remove = HTMLCollection.prototype.remove = function() 
{
  for(var i = this.length - 1; i >= 0; i--)
  {
    if(this[i] && this[i].parentElement)
    {
      this[i].parentElement.removeChild(this[i]);
    }
  }
}


//helper to convert to dd:hh:mm:ss
function toTimeFormat(time) 
{
//  var time = parseInt(this, 10); // don't forget the second param
  var days = Math.floor(time/86400);
  var hrs  = Math.floor(time/3600);
  var mins = Math.floor(time/60 - (hrs*60));
  var secs = time%60;

  if (days == 0)
  {      
    return hrs + "h " + mins + "m " + secs + "s";
  }
  else
  {   
    return days + "d " + hrs + "h " + mins + "m " + secs + "s";
  }

}



</script>


<style>

  tr.firstline td { padding-bottom: 0; border-bottom: 0}
  tr.lastline td  { padding-top: 0; border-top: 0;}
  tr.inner td { padding-top: 1px; padding-bottom: 1px; border: 0; }

  td[rowspan="4"] { vertical-align: middle; padding-top: 0; padding-bottom: 0;}
</style>




<h3>UMTS Interface Overview and Control Panel</h3>
<br> 

<!-- initial view, function to gather information is auto.called one after page was load
     by call at the end of the page
-->
<table id="data-table">
        <tr class="inner" id="UMTS1"><td><img src="<%=resource%>/icons/loading.gif" alt="..." 
                            style="width: 17px; padding: 0; vertical-align: middle;"/>
                            waiting for data...</td></tr>
        <tr id="UMTS2"></tr>
        <tr id="UMTS3"></tr>
        <tr id="UMTS4"></tr>
	<tr id="UMTS5"></tr>
	<tr id="UMTS6"></tr>
        <tr id="UMTS7"></tr> <!-- dummy element to allow insert-BEFORE approach-->
</table>

<%+footer%>


<!-- 
  javaScript-function calls at bottom will be auto-executed after page's load 
  here: perform initial call for displaying info of UMTS 1..6
-->

<script>
  for(var i=1; i<=6; i++)
  {
    insertInterfaceInfo(i);
  }
</script>
